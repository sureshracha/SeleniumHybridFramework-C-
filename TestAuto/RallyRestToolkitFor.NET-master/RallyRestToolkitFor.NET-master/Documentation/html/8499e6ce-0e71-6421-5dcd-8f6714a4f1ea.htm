<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Rally.RestApi.UiForWinforms Namespace</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="Rally.RestApi.UiForWinforms namespace" />
    <meta name="Microsoft.Help.F1" content="Rally.RestApi.UiForWinforms" />
    <meta name="Microsoft.Help.Id" content="N:Rally.RestApi.UiForWinforms" />
    <meta name="Description" content="This library provides a reusable UI for Winforms to provide common authentication.NOTE: If you need IDP based SSO, you must use the UI for WPF instead as the IDP support was not implemented in the Winforms libraries." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Rally.RestApi.UiForWinforms" />
    <meta name="file" content="8499e6ce-0e71-6421-5dcd-8f6714a4f1ea" />
    <meta name="guid" content="8499e6ce-0e71-6421-5dcd-8f6714a4f1ea" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Rally Rest API for .Net<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="3ef29523-65cb-43dc-a962-3690be4915cd.htm" title="Rally Rest API for .Net" tocid="roottoc">Rally Rest API for .Net</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="8499e6ce-0e71-6421-5dcd-8f6714a4f1ea.htm" title="Rally.RestApi.UiForWinforms" tocid="8499e6ce-0e71-6421-5dcd-8f6714a4f1ea">Rally.RestApi.UiForWinforms</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="70964b1c-6b84-4870-006e-c2ce9f6531e8.htm" title="RestApiAuthMgrWinforms Class" tocid="70964b1c-6b84-4870-006e-c2ce9f6531e8">RestApiAuthMgrWinforms Class</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="titleColumn">Rally.RestApi.UiForWinforms Namespace</td>
          </tr>
        </table>
        <span class="introStyle"></span>
        <div class="summary">
          <p>This library provides a reusable UI for Winforms to provide common authentication.</p>
          <p>
            <i>NOTE: If you need IDP based SSO, you must use the UI for WPF instead as the IDP support was not implemented in the Winforms libraries.</i>
          </p>
          <p>This pseudo code example shows how to use the UI for Winforms. For a full working sample, please see the code in Test.Rally.RestApi.UiSample within the repository.</p>
          <div class="codeSnippetContainer">
            <div class="codeSnippetContainerTabs">
              <div id="ID0EAAABA_tab1" class="codeSnippetContainerTabSingle">C#</div>
            </div>
            <div class="codeSnippetContainerCodeContainer">
              <div class="codeSnippetToolBar">
                <div class="codeSnippetToolBarText">
                  <a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a>
                </div>
              </div>
              <div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block">
                <pre xml:space="preserve">
                  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> RestApiAuthMgrWinforms winFormsAuthMgr { <span class="highlight-keyword">get</span>; <span class="highlight-keyword">set</span>; }

<span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> PrimaryEntryMethod()
{
    <span class="highlight-comment">// HELP: Define your encryption items prior to instantiating authorization managers</span>
    <span class="highlight-comment">// You must define your own private application token. This ensures that your login details are not overwritten by someone else.</span>
    <span class="highlight-keyword">string</span> applicationToken = <span class="highlight-literal">"RallyRestAPISample"</span>;
    <span class="highlight-comment">// You must set a user specific salt for encryption.</span>
    <span class="highlight-keyword">string</span> encryptionKey = <span class="highlight-literal">"UserSpecificSaltForEncryption"</span>;
    <span class="highlight-comment">// You must define your own encryption routines.</span>
    IEncryptionRoutines encryptionUtilities = <span class="highlight-keyword">new</span> EncryptionUtilities();

    <span class="highlight-comment">// HELP: Instantiate authorization manager</span>
    winFormsAuthMgr = <span class="highlight-keyword">new</span> RestApiAuthMgrWinforms(applicationToken, encryptionKey, encryptionUtilities);

    <span class="highlight-comment">// HELP: Configure labels for UI. These are global and used by the authentication manager to build their UI.</span>
    <span class="highlight-comment">// If this is not called, the default labels will be used. In this sample we are changing a label and the default server URL.</span>
    ApiAuthManager.Configure(loginWindowServerLabelText: <span class="highlight-literal">"My Updated Server Label"</span>, loginWindowDefaultServer: <span class="highlight-keyword">new</span> Uri(<span class="highlight-literal">"http://onprem-url"</span>));

    <span class="highlight-comment">// HELP: Set the logo that is shown in the login window</span>
    RestApiAuthMgrWinforms.SetLogo(ImageResources.RallyLogo4<span class="highlight-number">0x40</span>);

    <span class="highlight-comment">// Help: You can auto-authenticate if you want. We do not have it enabled for this application.</span>
    <span class="highlight-comment">// winFormsAuthMgr.AutoAuthenticate(true);</span>
}

<span class="highlight-comment">// HELP: This method shows you how to open a login window.</span>
<span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> openWinformsLogin_Click(<span class="highlight-keyword">object</span> sender, RoutedEventArgs e)
{
    <span class="highlight-comment">// HELP: Delegates are provided so we can be notified that authentication or SSO authentication has completed.</span>
    winFormsAuthMgr.ShowUserLoginWindow(AuthenticationComplete, SsoAuthenticationComplete);
}

<span class="highlight-comment">// HELP: This delegate notifies us that authentication has completed.</span>
<span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> AuthenticationComplete(RallyRestApi.AuthenticationResult authenticationResult, RallyRestApi api)
{
    UpdateAuthenticationResults(authenticationResult, api);
}

<span class="highlight-comment">// HELP: This delegate notifies us that SSO authentication has completed.</span>
<span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> SsoAuthenticationComplete(RallyRestApi.AuthenticationResult authenticationResult, RallyRestApi api)
{
    UpdateAuthenticationResults(authenticationResult, api);
}

<span class="highlight-comment">// HELP: This method handles the passthrough from the delegates.</span>
<span class="highlight-comment">// This is where you would need to update your application to show the logged in state.</span>
<span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> UpdateAuthenticationResults(RallyRestApi.AuthenticationResult authenticationResult, RallyRestApi api)
{
    <span class="highlight-comment">// Change your applications behavoir based upon the new AuthenticationResult</span>
}</pre>
              </div>
            </div>
          </div>
          <script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script>
        </div>
        <div class="collapsibleAreaRegion">
          <span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0">
            <img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span>
        </div>
        <div id="ID1RBSection" class="collapsibleSection">
          <table id="typeList" class="members">
            <tr>
              <th class="iconColumn">
					 
				</th>
              <th>Class</th>
              <th>Description</th>
            </tr>
            <tr data="class; public">
              <td>
                <img src="../icons/pubclass.gif" alt="Public class" title="Public class" />
              </td>
              <td>
                <a href="70964b1c-6b84-4870-006e-c2ce9f6531e8.htm">RestApiAuthMgrWinforms</a>
              </td>
              <td>
                <div class="summary">
            A Winforms based authentication manager.
            </div>
              </td>
            </tr>
          </table>
        </div>
      </div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:support%40rallydev.com?Subject=Rally Rest API for .Net">support@rallydev.com</a></div>
      <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>